what is reactjs ?
=================
--> reactjs is a front end js library for building user interface.
--> it is used for creating single page applications.
--> it allow developers to create re-usable UI components making the development more faster and efficient.

library Vs Framework
=====================

library :
=========
--> library is a collection of pre-written code that you can use to perform specific task.
--> it does not have rules and syntax are to be followed.
--> you can use however you want.
--> But library does not provide you everything, you might require to use another library also.

--> Example ==> React JS, GSAP.

Framework :
===========
--> Framework is a complete structure of building an application. It provides rules, patterns, and tools, and often dicates how your code should be structured.
--> It is built over your libraries and there is a proper syntax and rules we have to follow.
--> You can't do and use it however you see fit but it provides you with everything, no need of anything else.

--> Example ==> Tailwind, Angular.

SPA Vs MPA
===========

What is SPA ?
============
--> A SPA stands for sinle page application.
--> Loads a single HTML page and updates content dynamically without reloading the page.
--> Faster after the first load, as only necessary data is updated.
--> No reload of web page happens.
--> Requests are continued forward.

--> Examples : ==> Gmail, Facebook, Twitter.

What is MPA ?
=============
--> A MPA stands for Multi-page application.
--> Each page is a separate HTML file, making navigation slower.
--> slower performance, as the browser loads everything again on each page change.
--> Every new page request reloads the entire page from the server.
--> Every time Requests starts from 0.

--> Examples : ==> Wikipedia, News websites, Banking portals.

History of Reactjs :
=====================
--> The SPA is not a new term, it has been since 2002. But we didn't haave technology at the time.
--> In 2009, we got angularjs for creating SPA, but it was not optimized and had bugs.
--> In 2011 reactjs was created by Jordan Walke while working as a software engineer at Facebook (now known as a meta).
--> It was first used in Facebook's News Feed and later in Instagram.
--> It was made an open-source library in 2013 to be used by developers worldwide.
--> As of March 2025, React.js has had a total of 19 major versions released.


Characteristics of React.js
============================

React JS is a JS Library :
==========================
--> React.js is a lightweight library created using JavaScript. It primarily focuses on the view layer of an application.

Free and Open Source :
=========================
--> React is maintained by Meta (formerly Facebook) and is open source, allowing developers worldwide to contribute and improve it.

Component-Based Architecture :
===============================
--> A component in React splits your UI into small, reusable pieces. Each component handles its own logic and rendering, making your app modular and maintainable.

Declarative :
========================
--> Declarative means you tell React what you want, and React figures out how to do it. Instead of manually updating the DOM, you describe the UI state, and React updates it efficiently.

Unidirectional Data Flow :
===========================
--> Unidirectional Data Flow in React means data flows in one direction - from parent component to child components via props. This ensures predictable data flow, making it easier to debug.

Learn once write anywhere :
===========================
--> "Learn Once, Write Anywhere" in React Native means you can use your React knowledge to build apps for multiple platforms (web, iOS, Android) without learning separate technologies for each.

Virtual DOM :
===========================
--> React uses a Virtual DOM to optimize updates. React does not update the real DOM directly because it's slow. Instead, it uses a Virtual DOM, which is a lightweight copy of the real DOM.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                    JSX (JavaScript XML) :
                                    ======================
--> JSX stands for JavaScript XML.
--> JSX is a syntax extension for JavaScript that allows you to write HTML-like code within your JavaScript files.
--> Used in React to describe the UI structure in a more readable way.

                                    Key Points :
                                    =============
1. Looks like HTML: But it's written in JavaScript files (usually with a .jsx or .js extension).
2. Needs compilation: Browsers don't understand JSX directly, so it needs to be compiled into regular JavaScript using tools like Babel.
3.Enhances readability: JSX makes it easier to visualize the UI structure and components, as it resembles HTML.

                                    JSX Rules and Restictions :
                                    ============================
1 Return a single parent element:
================================

   --> JSX must return a single parent element. If you need multiple elements, wrap them in a parent element like a `<div>` or use React Fragments (`<>...</>`).

2. JavaScript Expressions in `{}`:
==================================

    --> JavaScript expressions(variables, functionscalls) can be used within the curly braces `{}` in JSX.

3. Use className instead of class:
==================================

   --> In JSX, use `className` instead of `class` to avoid conflicts with the JavaScript `class` keyword.

4. Self-closing tags:
=====================
    --> Tags without children can be self-closed, like `<img />` or `<input />`.

                                   JSX Expressions :
                                    =================
--> JSX expressions allow you to embed JavaScript expressions within JSX using curly braces `{}`.
--> Expressions can include variables, function calls, and other JavaScript logic directly inside JSX.

Key Points about JSX Expressions:
================================
1. Using curly braces `{}`:
===========================

   --> Place JavaScript code within `{}` to output dynamic values or expressions in JSX.

    Example:
    ========

    const name = "John";
    return <h1>Hello, {name}!</h1>; // Outputs: <h1>Hello, John!</h1>

2. allowed expressions:
=======================

   --> variables :
     You can use variables within `{}` to display dynamic content.

     const age = 25;
     return <p>Age: {age}</p>; // Outputs: <p>Age: 25</p>

   --> Math calculations:
     You can perform calculations directly within JSX.

     return <p>Sum: {5 + 10}</p>; // Outputs: <p>Sum: 15</p>

3.Not allowed:
==============
   - `if`, `for`, or `while`, loop, boolean, undefined, null, and objects cannot be used directly in JSX expressions.
   - Instead, you can use ternary operators or logical operators to conditionally render content.